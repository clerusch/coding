\begin{Verbatim}[commandchars=\\\{\}]
    \PYG{k+kn}{from} \PYG{n+nn}{numpy} \PYG{k+kn}{import} \PYG{n}{array}\PYG{p}{,} \PYG{n}{vstack}\PYG{p}{,} \PYG{n}{hstack}\PYG{p}{,} \PYG{n}{zeros}
    \PYG{k+kn}{from} \PYG{n+nn}{itertools} \PYG{k+kn}{import} \PYG{n}{product}

    \PYG{k}{def} \PYG{n+nf}{genSteaneLookupTable}\PYG{p}{():}
        \PYG{c+c1}{\PYGZsh{}}
        \PYG{n}{Generates} \PYG{n}{Steane} \PYG{n}{parity} \PYG{n}{check} \PYG{n}{matrix} \PYG{k+kn}{from} \PYG{n+nn}{identical}
        \PYG{n}{X} \PYG{o+ow}{and} \PYG{n}{Z} \PYG{n}{PCMs}
        \PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+s2}{        H = array([[1, 0, 0, 1, 0, 1, 1],}
\PYG{l+s+s2}{                    [0, 1, 0, 1, 1, 0, 1],}
\PYG{l+s+s2}{                    [0, 0, 1, 0, 1, 1, 1]])}
\PYG{l+s+s2}{        pcm = vstack((hstack((H, zeros(H.shape))),}
\PYG{l+s+s2}{                        hstack((zeros(H.shape), H))))}

\PYG{l+s+s2}{        \PYGZsh{} Generate lookup table}
\PYG{l+s+s2}{        lookup\PYGZus{}table = }\PYG{l+s+si}{\PYGZob{}\PYGZcb{}}
\PYG{l+s+s2}{        for error in product([0, 1], repeat=14):}
\PYG{l+s+s2}{            syndrome = tuple(pcm @ error \PYGZpc{} 2)}
\PYG{l+s+s2}{            if syndrome in lookup\PYGZus{}table:}
\PYG{l+s+s2}{                lookup\PYGZus{}table[syndrome].append(error)}
\PYG{l+s+s2}{            else:}
\PYG{l+s+s2}{                lookup\PYGZus{}table[syndrome] = [error]}

\PYG{l+s+s2}{        \PYGZsh{} Remove duplicates from lookup table}
\PYG{l+s+s2}{        for key in lookup\PYGZus{}table:}
\PYG{l+s+s2}{            lookup\PYGZus{}table[key] = list(set(lookup\PYGZus{}table[key]))}

\PYG{l+s+s2}{        return lookup\PYGZus{}table}

\PYG{l+s+s2}{    syndrome = array([1,1,1,0,0,0])}

\PYG{l+s+s2}{    possibles = genSteaneLookupTable()[tuple(syndrome)]}

\PYG{l+s+s2}{    print(f\PYGZdq{}The syndrome }\PYG{l+s+si}{\PYGZob{}syndrome\PYGZcb{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s+s2}{ can be caused by the following errors: \PYGZdq{})}
\PYG{l+s+s2}{    curr\PYGZus{}minweight = (100,100)}
\PYG{l+s+s2}{    for possible in possibles:}
\PYG{l+s+s2}{        print(possible)}
\PYG{l+s+s2}{        if sum(possible)\PYGZlt{}sum(curr\PYGZus{}minweight):}
\PYG{l+s+s2}{            curr\PYGZus{}minweight = possible}

\PYG{l+s+s2}{    print(f\PYGZdq{}The most likely cause of this syndrome is}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s+s2}{ }\PYG{l+s+si}{\PYGZob{}curr\PYGZus{}minweight\PYGZcb{}}\PYG{l+s+s2}{\PYGZdq{})}
\end{Verbatim}
